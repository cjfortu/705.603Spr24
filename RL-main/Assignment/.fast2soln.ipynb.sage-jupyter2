{"backend_state":"ready","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-8608e564-c409-45ff-9d1f-a4ca6525c00e.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"last_ipynb_save":1714820776801,"trust":true,"type":"settings"}
{"cell_type":"code","end":1714743241130,"exec_count":28,"id":"bcdb8a","input":"statefeats = list(dfub.columns)\nremcols = ['Customer_ID', 'Gender_M', 'Type_C', 'Domain_yahoo',\\\n           'AgeG_50+', 'TenG_24+']\n\nfor remcol in remcols:\n    statefeats.remove(remcol)\n\nstatefeats.append('wkndhol')\n\nprint(statefeats)","kernel":"python3","output":{"0":{"name":"stdout","text":"['Gender_F', 'Type_B', 'Domain_aol', 'Domain_comcast', 'Domain_gmail', 'Domain_hotmail', 'Domain_msn', 'AgeG_18-22', 'AgeG_23-29', 'AgeG_30-39', 'AgeG_40-49', 'TenG_0-11', 'TenG_12-23', 'wkndhol']\n"}},"pos":39,"start":1714743241127,"state":"done","type":"cell"}
{"cell_type":"code","end":1714767906198,"exec_count":575,"id":"fe11ce","input":"with open ('./data/dfse.bin', 'rb') as f:\n    dfse = pickle.load(f)\n","kernel":"python3","pos":14,"start":1714767906065,"state":"done","type":"cell"}
{"cell_type":"code","end":1714767924119,"exec_count":583,"id":"a62123","input":"dfse['Customer_ID'].value_counts().hist(bins = 20)\nprint(dfse['Customer_ID'].value_counts())","kernel":"python3","output":{"0":{"name":"stdout","text":"Customer_ID\n446135    20\n326146    18\n290001    18\n92478     18\n220635    18\n          ..\n305661     1\n107312     1\n365039     1\n176265     1\n450147     1\nName: count, Length: 496518, dtype: int64\n"},"1":{"data":{"image/png":"eeb6337f91d825a1210081ca3adb3b1621d61971","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":411,"width":723},"needs_background":"light"}}},"pos":18,"start":1714767923631,"state":"done","type":"cell"}
{"cell_type":"code","end":1714767935168,"exec_count":587,"id":"8d7f65","input":"with open ('./data/dfrp.bin', 'rb') as f:\n    dfrp = pickle.load(f)","kernel":"python3","pos":22,"start":1714767935148,"state":"done","type":"cell"}
{"cell_type":"code","end":1714767938961,"exec_count":589,"id":"5b1bb2","input":"us_hols = holidays.US(years = range(2015, 2017))\n\ndfrp['Date'] = pd.to_datetime(dfrp['Responded_Date'])\ndfrp['weekend'] = dfrp['Date'].dt.dayofweek > 4\ndfrp['holiday'] = dfrp['Date'].isin(us_hols)\ndfrp['wkndhol'] = (dfrp['weekend'] == True) | (dfrp['holiday'] == True)\ndfrp = dfrp.drop(['Responded_Date', 'weekend', 'holiday'], axis=1)","kernel":"python3","pos":24,"start":1714767938897,"state":"done","type":"cell"}
{"cell_type":"code","end":1714767940829,"exec_count":590,"id":"669bec","input":"# dfrb['Subject'] = dfrb['SubjectLine_ID']\n# dfrb = pd.get_dummies(dfrb, columns=['Subject'])\n# dfrb = dfrb.drop(['SubjectLine_ID'], axis=1)","kernel":"python3","pos":25,"start":1714767940826,"state":"done","type":"cell"}
{"cell_type":"code","end":1714767941515,"exec_count":591,"id":"a2afd9","input":"dfrp['Customer_ID'].value_counts().hist(bins = 8)\nprint(dfrp['Customer_ID'].value_counts())","kernel":"python3","output":{"0":{"name":"stdout","text":"Customer_ID\n243078    8\n350199    7\n406933    7\n475992    7\n41282     7\n         ..\n60056     1\n371896    1\n78581     1\n187551    1\n146008    1\nName: count, Length: 264859, dtype: int64\n"},"1":{"data":{"image/png":"78cd11f59fae6d0b9ce2e6e042c970b24e4a370e","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":411,"width":729},"needs_background":"light"}}},"pos":26,"start":1714767941153,"state":"done","type":"cell"}
{"cell_type":"code","end":1714768058882,"exec_count":595,"id":"6871eb","input":"dfrp.loc[dfrp['Customer_ID'] == 80941]","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>374468</th>\n      <td>80941</td>\n      <td>3</td>\n      <td>2016-01-25</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"        Customer_ID  SubjectLine_ID       Date  wkndhol\n374468        80941               3 2016-01-25    False"},"exec_count":595}},"pos":30,"start":1714768058871,"state":"done","type":"cell"}
{"cell_type":"code","end":1714772324683,"exec_count":1000,"id":"ccdca9","input":"# GET THE SEQUENCE OF CUSTOMER ID'S ACCORDING TO CUSTOMER TYPE\n\ndef get_ubseq(dfub):\n    l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12 =\\\n            [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1],\\\n            [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1]\n    icbs = [[a, b, c, d, e, f, g, h, i, j, k, l, m]\n            for a in l0\n            for b in l1\n            for c in l2\n            for d in l3\n            for e in l4\n            for f in l5\n            for g in l6\n            for h in l7\n            for i in l8\n            for j in l9\n            for k in l10\n            for l in l11\n            for m in l12\n           ]\n\n    ubseq = {}\n    for icb in icbs:\n        matches = list(dfub.loc[\n            (dfub['Gender_F']==icb[0]) & (dfub['Type_B']==icb[1]) &\n            (dfub['Domain_aol']==icb[2]) & (dfub['Domain_comcast']==icb[3]) &\n            (dfub['Domain_gmail']==icb[4]) & (dfub['Domain_hotmail']==icb[5]) &\n            (dfub['Domain_msn']==icb[6]) & (dfub['AgeG_18-22']==icb[7]) &\n            (dfub['AgeG_23-29']==icb[8]) & (dfub['AgeG_30-39']==icb[9]) &\n            (dfub['AgeG_40-49']==icb[10]) & (dfub['TenG_0-5']==icb[11]) &\n            (dfub['TenG_6-23']==icb[12]), 'Customer_ID'])\n        ubseq['{}{}{}{}{}{}{}{}{}{}{}{}{}'.format(icb[0], icb[1], icb[2], icb[3],\n                                                 icb[4], icb[5], icb[6], icb[7],\n                                                 icb[8], icb[9], icb[10], icb[11],\n                                                 icb[12])] = matches\n    return ubseq\n\n# ubseq = get_ubseq(dfub)\n\n# with open ('./data/ubseq.bin', 'wb') as f:\n#     pickle.dump(ubseq, f)\n\nwith open ('./data/ubseq.bin', 'rb') as f:\n    ubseq = pickle.load(f)\n\nprint(ubseq['0000000000001'])\nprint(list(ubseq.keys())[1])\n# 23452iusdfh2378hfr\nprint(len(ubseq))","kernel":"python3","output":{"0":{"name":"stdout","text":"[78097, 105830, 118975, 141937, 194799, 218627, 386161, 406364, 408314, 455050, 473853]\n0000000000001\n8192\n"}},"pos":28,"start":1714772324638,"state":"done","type":"cell"}
{"cell_type":"code","end":1714777930746,"exec_count":1186,"id":"6040ad","input":"dfres.loc[dfres['Customer_ID'].isin(ubseq['0000000000001'])\n         ].\\\n                    reset_index()","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol</th>\n      <th>resp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>12744</td>\n      <td>194799</td>\n      <td>2</td>\n      <td>2016-01-19</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>24187</td>\n      <td>78097</td>\n      <td>3</td>\n      <td>2016-03-08</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>27011</td>\n      <td>78097</td>\n      <td>3</td>\n      <td>2016-01-24</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>59060</td>\n      <td>141937</td>\n      <td>3</td>\n      <td>2016-02-09</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>62726</td>\n      <td>455050</td>\n      <td>2</td>\n      <td>2016-03-20</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>2104370</td>\n      <td>118975</td>\n      <td>3</td>\n      <td>2016-02-05</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>2199263</td>\n      <td>386161</td>\n      <td>1</td>\n      <td>2016-02-08</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>2223868</td>\n      <td>473853</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>2366199</td>\n      <td>118975</td>\n      <td>2</td>\n      <td>2016-02-20</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>2466898</td>\n      <td>78097</td>\n      <td>1</td>\n      <td>2016-02-17</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>61 rows Ã— 6 columns</p>\n</div>","text/plain":"      index  Customer_ID  SubjectLine_ID       Date  wkndhol   resp\n0     12744       194799               2 2016-01-19    False  False\n1     24187        78097               3 2016-03-08    False  False\n2     27011        78097               3 2016-01-24     True  False\n3     59060       141937               3 2016-02-09    False  False\n4     62726       455050               2 2016-03-20     True  False\n..      ...          ...             ...        ...      ...    ...\n56  2104370       118975               3 2016-02-05    False  False\n57  2199263       386161               1 2016-02-08    False  False\n58  2223868       473853               2 2016-03-02    False  False\n59  2366199       118975               2 2016-02-20     True   True\n60  2466898        78097               1 2016-02-17    False   True\n\n[61 rows x 6 columns]"},"exec_count":1186}},"pos":36,"start":1714777930704,"state":"done","type":"cell"}
{"cell_type":"code","end":1714780212377,"exec_count":1455,"id":"ae5c57","input":"class emailenv:\n    def __init__(self, ubseq, dfres, maxsteps, mode='Train'):\n        self.ubseq = ubseq\n        self.dfres = dfres\n        self.whswitch = {'0': 1, '1': 0}\n\n        # Very first training state\n        self.utypidx = 0\n        self.stepn = 0\n        if mode == 'Train':\n            self.utyps = list(ubseq.keys())\n            self.curusrs = self.ubseq[self.utyps[self.utypidx]]\n            self.res = self.dfres.loc[self.dfres['Customer_ID'].\\\n                    isin(self.curusrs)].\\\n                    reset_index()\n            self.wkndhol = 0\n            self.stateidx = self.utypidx + self.wkndhol * 2**13\n            self.lendat = len(self.res)\n            self.maxsteps = maxsteps\n\n\n    def get_state(self):\n        return self.stateidx\n\n\n    def isepdone(self):\n        if self.stepn == self.maxsteps:\n            return True\n        else:\n            return False\n\n    def istrdone(self):\n#         print('inner: {} == {}'.format(self.utypidx, len(self.utyps)))\n        if self.utypidx == len(self.utyps):\n            return True\n        else:\n            return False\n\n\n    def proc_reward_conv(self, act):\n        if act != 0:\n            nfails = len(self.res.loc[(self.res['SubjectLine_ID'] == act) &\\\n                    (self.res['wkndhol'] == self.wkndhol) &\\\n                    (self.res['resp'] == False)])\n            nresp = len(self.res.loc[(self.res['SubjectLine_ID'] == act) &\\\n                    (self.res['wkndhol'] == self.wkndhol) &\\\n                    (self.res['resp'] == True)])\n            try:\n                reward = nresp / (nfails + nresp)\n            except ZeroDivisionError:\n                reward = 0\n        elif act == 0:\n            reward = 0\n\n        return reward\n\n\n    def step(self, act):\n        self.wkndhol = self.whswitch[str(self.wkndhol)]\n        self.stepn += 1\n        self.stateidx = self.utypidx + self.wkndhol * 2**13\n        reward = self.proc_reward_conv(act)\n        self.epdone = self.isepdone()\n\n        return self.stateidx, reward, self.epdone\n\n\n    def nextep(self):\n        critlen = 0\n        while critlen == 0:\n            self.utypidx += 1\n            try:\n                self.curusrs = self.ubseq[self.utyps[self.utypidx]]\n            except:\n                self.curusrs = self.ubseq[self.utyps[0]]\n            self.res = self.dfres.loc[self.dfres['Customer_ID'].\\\n                    isin(self.curusrs)].\\\n                    reset_index()\n            critlen = len(self.res)\n#         print(self.utypidx)\n        self.lendat = critlen\n        self.stepn = 0\n\n","kernel":"python3","pos":40,"start":1714780212371,"state":"done","type":"cell"}
{"cell_type":"code","end":1714780439674,"exec_count":1501,"id":"23c040","input":"\nwith open ('./data/q_table.bin', 'wb') as f:\n    pickle.dump(q_table, f)\n\nwith open ('./data/q_table.bin', 'rb') as f:\n    q_table = pickle.load(f)\n\nq_table","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[0.16158982, 0.0459896 , 0.00127333, 0.03140637],\n       [0.04344894, 0.00131903, 0.56532414, 0.00814814],\n       [0.        , 0.        , 0.        , 0.        ],\n       ...,\n       [0.        , 0.        , 0.        , 0.        ],\n       [0.        , 0.        , 0.        , 0.        ],\n       [0.        , 0.        , 0.        , 0.        ]])"},"exec_count":1501}},"pos":44,"start":1714780439652,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"052e29","input":"### Process userbase","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1b02f7","input":"**The min and max number of responses per customer indicates the conversion rate can be no less than 0.05 per customer.**\n\n**If we add *pass* as a fourth action, we can account for no-response and exhaustively determine the environment.**","pos":27,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"70ba78","input":"**We know the state space will have 13 binary combinations of positions so far, even though the dataframe now has 18 binary columns.  This is because the encoded Gender_, AgeG_, Domain_, Type_, and TenG_ columns can each be reduced by 1, since a *False* in all remaining columns necessitates a *True* in the reduced column.**\n\n**We must also add a binary column for weekend-holiday/ordinaryday.  This is a state space of 2^14 = 16384.  We consider this size acceptable for a Q matrix.**","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7a44ab","input":"**The histogram shows there is most often multiple sent emails per customer.  Hence our game will predict what actions to take for a given customer type for each day step across an episode of a month.**\n\n**Reward will scale proportionately with conversion.**","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"92d65e","input":"### Process the responses","pos":21,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cc2c19","input":"### Process sent emails","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d058cb","input":"**We can create the environmental response using these actions per customer.  To complete the environmental response, we must examine the response data.**","pos":20,"state":"done","type":"cell"}
{"end":1714743132839,"exec_count":4,"id":"76efaa","input":"# dfse = pd.read_csv('./data/sent_emails.csv')\n# dfub = pd.read_csv('./data/userbase.csv')\n# dfrp = pd.read_csv('./data/responded.csv')\n\n# for df, binpth in zip([dfse, dfub, dfrp],\\\n#         ['./data/dfse.bin', './data/dfub.bin', './data/dfrp.bin']):\n#     with open (binpth, 'wb') as f:\n#         pickle.dump(df, f)\n","kernel":"python3","pos":2,"start":1714743132834,"state":"done","type":"cell"}
{"end":1714760837644,"exec_count":214,"id":"ad1a53","input":"True * 2**14","kernel":"python3","output":{"0":{"data":{"text/plain":"16384"},"exec_count":214}},"pos":47,"start":1714760837640,"state":"done","type":"cell"}
{"end":1714765395808,"exec_count":437,"id":"7a4d24","input":"import pandas as pd\nimport numpy as np\nimport pickle\nimport holidays\nimport time\nimport matplotlib.pyplot as plt\n\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)","kernel":"python3","pos":1,"start":1714765395806,"state":"done","type":"cell"}
{"end":1714767892773,"exec_count":568,"id":"b8e3a1","input":"# with open ('./data/dfse.bin', 'rb') as f:\n#     dfse = pickle.load(f)\n\nwith open ('./data/dfub.bin', 'rb') as f:\n    dfub = pickle.load(f)\n\n# with open ('./data/dfrp.bin', 'rb') as f:\n#     dfrp = pickle.load(f)","kernel":"python3","pos":3,"start":1714767892654,"state":"done","type":"cell"}
{"end":1714767898104,"exec_count":569,"id":"3b37a4","input":"dfub = pd.get_dummies(dfub, columns=['Gender', 'Type'])","kernel":"python3","pos":6,"start":1714767897945,"state":"done","type":"cell"}
{"end":1714767901222,"exec_count":570,"id":"50703b","input":"dfub['Domain'] = dfub['Email_Address'].str.split('@').str[1].str.split('.').str[0]\ndfub = pd.get_dummies(dfub, columns=['Domain'])\ndfub = dfub.drop(['Email_Address'], axis=1)","kernel":"python3","pos":7,"start":1714767898434,"state":"done","type":"cell"}
{"end":1714767901272,"exec_count":571,"id":"1103c3","input":"def get_age_group(age):\n    if age <= 22:\n        return '18-22'\n    elif age >= 23 and age <= 29:\n        return '23-29'\n    elif age >= 30 and age <= 39:\n        return '30-39'\n    elif age >= 40 and age <= 49:\n        return '40-49'\n    elif age >= 50:\n        return '50+'\n","kernel":"python3","pos":8,"start":1714767901269,"state":"done","type":"cell"}
{"end":1714767901443,"exec_count":572,"id":"7daaee","input":"dfub['AgeG'] = dfub['Age'].apply(get_age_group)\ndfub = pd.get_dummies(dfub, columns=['AgeG'])\ndfub = dfub.drop(['Age'], axis=1)","kernel":"python3","pos":9,"start":1714767901276,"state":"done","type":"cell"}
{"end":1714767901455,"exec_count":573,"id":"e6f4c6","input":"def proc_tenure(tenure):\n    if tenure <= 5:\n        return '0-5'\n    elif tenure >= 6 and tenure <= 23:\n        return '6-23'\n    elif tenure >= 24:\n        return '24+'\n","kernel":"python3","pos":10,"start":1714767901452,"state":"done","type":"cell"}
{"end":1714767902654,"exec_count":574,"id":"227bf6","input":"dfub['TenG'] = dfub['Tenure'].apply(proc_tenure)\ndfub = pd.get_dummies(dfub, columns=['TenG'])\ndfub = dfub.drop(['Tenure'], axis=1)","kernel":"python3","pos":11,"start":1714767902499,"state":"done","type":"cell"}
{"end":1714767908639,"exec_count":577,"id":"287b9e","input":"us_hols = holidays.US(years = range(2015, 2017))\n\ndfse['Date'] = pd.to_datetime(dfse['Sent_Date'])\ndfse['weekend'] = dfse['Date'].dt.dayofweek > 4\ndfse['holiday'] = dfse['Date'].isin(us_hols)\ndfse['wkndhol'] = (dfse['weekend'] == True) | (dfse['holiday'] == True)\ndfse = dfse.drop(['Sent_Date', 'weekend', 'holiday'], axis=1)","kernel":"python3","pos":16,"start":1714767907837,"state":"done","type":"cell"}
{"end":1714767908652,"exec_count":578,"id":"a4871d","input":"# dfse['Subject'] = dfse['SubjectLine_ID']\n# dfse = pd.get_dummies(dfse, columns=['Subject'])\n# dfse = dfse.drop(['SubjectLine_ID'], axis=1)","kernel":"python3","pos":17,"start":1714767908650,"state":"done","type":"cell"}
{"end":1714767916074,"exec_count":581,"id":"0a8459","input":"dfse","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1413</td>\n      <td>2</td>\n      <td>2016-01-28</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>83889</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>457832</td>\n      <td>3</td>\n      <td>2016-03-09</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>127772</td>\n      <td>1</td>\n      <td>2016-01-20</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>192123</td>\n      <td>3</td>\n      <td>2016-02-03</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2476349</th>\n      <td>460565</td>\n      <td>3</td>\n      <td>2016-02-22</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2476350</th>\n      <td>360823</td>\n      <td>2</td>\n      <td>2016-02-25</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2476351</th>\n      <td>443177</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2476352</th>\n      <td>179200</td>\n      <td>3</td>\n      <td>2016-03-12</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2476353</th>\n      <td>68532</td>\n      <td>2</td>\n      <td>2016-01-17</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>2476354 rows Ã— 4 columns</p>\n</div>","text/plain":"         Customer_ID  SubjectLine_ID       Date  wkndhol\n0               1413               2 2016-01-28    False\n1              83889               2 2016-03-02    False\n2             457832               3 2016-03-09    False\n3             127772               1 2016-01-20    False\n4             192123               3 2016-02-03    False\n...              ...             ...        ...      ...\n2476349       460565               3 2016-02-22    False\n2476350       360823               2 2016-02-25    False\n2476351       443177               2 2016-03-02    False\n2476352       179200               3 2016-03-12     True\n2476353        68532               2 2016-01-17     True\n\n[2476354 rows x 4 columns]"},"exec_count":581}},"pos":15,"start":1714767916070,"state":"done","type":"cell"}
{"end":1714767919128,"exec_count":582,"id":"773111","input":"dfub","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>Gender_F</th>\n      <th>Gender_M</th>\n      <th>Type_B</th>\n      <th>Type_C</th>\n      <th>Domain_aol</th>\n      <th>Domain_comcast</th>\n      <th>Domain_gmail</th>\n      <th>Domain_hotmail</th>\n      <th>Domain_msn</th>\n      <th>Domain_yahoo</th>\n      <th>AgeG_18-22</th>\n      <th>AgeG_23-29</th>\n      <th>AgeG_30-39</th>\n      <th>AgeG_40-49</th>\n      <th>AgeG_50+</th>\n      <th>TenG_0-5</th>\n      <th>TenG_24+</th>\n      <th>TenG_6-23</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>499995</th>\n      <td>499996</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>499996</th>\n      <td>499997</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>499997</th>\n      <td>499998</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>499998</th>\n      <td>499999</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>499999</th>\n      <td>500000</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>500000 rows Ã— 19 columns</p>\n</div>","text/plain":"        Customer_ID  Gender_F  Gender_M  Type_B  Type_C  Domain_aol  \\\n0                 1     False      True   False    True       False   \n1                 2      True     False    True   False        True   \n2                 3      True     False   False    True       False   \n3                 4     False      True   False    True       False   \n4                 5     False      True   False    True        True   \n...             ...       ...       ...     ...     ...         ...   \n499995       499996     False      True    True   False       False   \n499996       499997      True     False   False    True       False   \n499997       499998     False      True    True   False       False   \n499998       499999     False      True   False    True       False   \n499999       500000      True     False    True   False       False   \n\n        Domain_comcast  Domain_gmail  Domain_hotmail  Domain_msn  \\\n0                False         False           False        True   \n1                False         False           False       False   \n2                False         False           False        True   \n3                 True         False           False       False   \n4                False         False           False       False   \n...                ...           ...             ...         ...   \n499995           False         False           False        True   \n499996           False          True           False       False   \n499997            True         False           False       False   \n499998           False         False            True       False   \n499999           False         False           False       False   \n\n        Domain_yahoo  AgeG_18-22  AgeG_23-29  AgeG_30-39  AgeG_40-49  \\\n0              False       False       False        True       False   \n1              False       False       False        True       False   \n2              False       False       False        True       False   \n3              False       False       False        True       False   \n4              False       False       False        True       False   \n...              ...         ...         ...         ...         ...   \n499995         False       False        True       False       False   \n499996         False       False       False        True       False   \n499997         False       False       False        True       False   \n499998         False       False       False        True       False   \n499999          True       False       False        True       False   \n\n        AgeG_50+  TenG_0-5  TenG_24+  TenG_6-23  \n0          False     False     False       True  \n1          False     False     False       True  \n2          False     False     False       True  \n3          False     False      True      False  \n4          False     False     False       True  \n...          ...       ...       ...        ...  \n499995     False     False     False       True  \n499996     False     False     False       True  \n499997     False     False     False       True  \n499998     False     False     False       True  \n499999     False     False     False       True  \n\n[500000 rows x 19 columns]"},"exec_count":582}},"pos":5,"start":1714767919109,"state":"done","type":"cell"}
{"end":1714767936347,"exec_count":588,"id":"0da10b","input":"dfrp","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Responded_Date</th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2016-01-25</td>\n      <td>217102</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2016-03-26</td>\n      <td>366875</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2016-03-17</td>\n      <td>201561</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2016-01-11</td>\n      <td>395345</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2016-01-11</td>\n      <td>427539</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>378203</th>\n      <td>2016-01-09</td>\n      <td>43156</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>378204</th>\n      <td>2016-03-16</td>\n      <td>397330</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>378205</th>\n      <td>2016-02-25</td>\n      <td>377520</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>378206</th>\n      <td>2016-02-04</td>\n      <td>146008</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>378207</th>\n      <td>2016-02-09</td>\n      <td>374971</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n<p>378208 rows Ã— 3 columns</p>\n</div>","text/plain":"       Responded_Date  Customer_ID  SubjectLine_ID\n0          2016-01-25       217102               3\n1          2016-03-26       366875               2\n2          2016-03-17       201561               2\n3          2016-01-11       395345               3\n4          2016-01-11       427539               3\n...               ...          ...             ...\n378203     2016-01-09        43156               1\n378204     2016-03-16       397330               2\n378205     2016-02-25       377520               1\n378206     2016-02-04       146008               2\n378207     2016-02-09       374971               3\n\n[378208 rows x 3 columns]"},"exec_count":588}},"pos":23,"start":1714767936344,"state":"done","type":"cell"}
{"end":1714768057905,"exec_count":594,"id":"1e1e14","input":"arg = 1413\nprint(dfse.loc[dfse['Customer_ID'] == arg])\nprint(dfrp.loc[dfrp['Customer_ID'] == arg])","kernel":"python3","output":{"0":{"name":"stdout","text":"         Customer_ID  SubjectLine_ID       Date  wkndhol\n0               1413               2 2016-01-28    False\n484390          1413               1 2016-03-19     True\n1800284         1413               2 2016-01-03     True\n1938207         1413               3 2016-02-01    False\n        Customer_ID  SubjectLine_ID       Date  wkndhol\n320932         1413               2 2016-01-31     True\n"}},"pos":29,"start":1714768057896,"state":"done","type":"cell"}
{"end":1714768079907,"exec_count":597,"id":"f48ff1","input":"dfrsp = dfrsp.drop(columns=['wkndhol_y'])\ndfrsp = dfrsp.rename(columns={'wkndhol_x': 'wkndhol'})\ndfrsp['resp'] = True\ndfrsp","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol</th>\n      <th>resp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>288759</td>\n      <td>3</td>\n      <td>2016-02-18</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>73067</td>\n      <td>2</td>\n      <td>2016-03-22</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>453316</td>\n      <td>2</td>\n      <td>2016-01-21</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>460528</td>\n      <td>1</td>\n      <td>2016-01-27</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>201612</td>\n      <td>2</td>\n      <td>2016-01-29</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>229105</th>\n      <td>46081</td>\n      <td>1</td>\n      <td>2016-02-22</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>229106</th>\n      <td>34101</td>\n      <td>2</td>\n      <td>2016-03-17</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>229107</th>\n      <td>337686</td>\n      <td>2</td>\n      <td>2016-01-06</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>229108</th>\n      <td>78807</td>\n      <td>2</td>\n      <td>2016-01-21</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>229109</th>\n      <td>317419</td>\n      <td>3</td>\n      <td>2016-01-30</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>229110 rows Ã— 5 columns</p>\n</div>","text/plain":"        Customer_ID  SubjectLine_ID       Date  wkndhol  resp\n0            288759               3 2016-02-18    False  True\n1             73067               2 2016-03-22    False  True\n2            453316               2 2016-01-21    False  True\n3            460528               1 2016-01-27    False  True\n4            201612               2 2016-01-29    False  True\n...             ...             ...        ...      ...   ...\n229105        46081               1 2016-02-22    False  True\n229106        34101               2 2016-03-17    False  True\n229107       337686               2 2016-01-06    False  True\n229108        78807               2 2016-01-21    False  True\n229109       317419               3 2016-01-30     True  True\n\n[229110 rows x 5 columns]"},"exec_count":597}},"pos":32,"start":1714768079892,"state":"done","type":"cell"}
{"end":1714768363304,"exec_count":609,"id":"a83731","input":"# dffl = dfse.merge(dfrsp, left_on = ['Customer_ID', 'Date', 'SubjectLine_ID'],\n#         right_on = ['Customer_ID', 'Date', 'SubjectLine_ID'],\n#         how = 'outer', indicator = 'source')\n# dffl = dffl[dffl['source'].eq('left_only')].drop('source', axis=1)\n\n# with open ('./data/dffl.bin', 'wb') as f:\n#     pickle.dump(dffl, f)\n\nwith open ('./data/dffl.bin', 'rb') as f:\n    dffl = pickle.load(f)\n\ndffl","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol_x</th>\n      <th>wkndhol_y</th>\n      <th>resp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1413</td>\n      <td>2</td>\n      <td>2016-01-28</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>83889</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>457832</td>\n      <td>3</td>\n      <td>2016-03-09</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>127772</td>\n      <td>1</td>\n      <td>2016-01-20</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>192123</td>\n      <td>3</td>\n      <td>2016-02-03</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2476650</th>\n      <td>460565</td>\n      <td>3</td>\n      <td>2016-02-22</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2476651</th>\n      <td>360823</td>\n      <td>2</td>\n      <td>2016-02-25</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2476652</th>\n      <td>443177</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2476653</th>\n      <td>179200</td>\n      <td>3</td>\n      <td>2016-03-12</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2476654</th>\n      <td>68532</td>\n      <td>2</td>\n      <td>2016-01-17</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>2247545 rows Ã— 6 columns</p>\n</div>","text/plain":"         Customer_ID  SubjectLine_ID       Date  wkndhol_x wkndhol_y resp\n0               1413               2 2016-01-28      False       NaN  NaN\n1              83889               2 2016-03-02      False       NaN  NaN\n2             457832               3 2016-03-09      False       NaN  NaN\n3             127772               1 2016-01-20      False       NaN  NaN\n4             192123               3 2016-02-03      False       NaN  NaN\n...              ...             ...        ...        ...       ...  ...\n2476650       460565               3 2016-02-22      False       NaN  NaN\n2476651       360823               2 2016-02-25      False       NaN  NaN\n2476652       443177               2 2016-03-02      False       NaN  NaN\n2476653       179200               3 2016-03-12       True       NaN  NaN\n2476654        68532               2 2016-01-17       True       NaN  NaN\n\n[2247545 rows x 6 columns]"},"exec_count":609}},"pos":33,"scrolled":true,"start":1714768362638,"state":"done","type":"cell"}
{"end":1714768364892,"exec_count":610,"id":"2b61a5","input":"dffl = dffl.drop(columns=['wkndhol_y'])\ndffl = dffl.rename(columns={'wkndhol_x': 'wkndhol'})\ndffl['resp'] = False\ndffl","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol</th>\n      <th>resp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1413</td>\n      <td>2</td>\n      <td>2016-01-28</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>83889</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>457832</td>\n      <td>3</td>\n      <td>2016-03-09</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>127772</td>\n      <td>1</td>\n      <td>2016-01-20</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>192123</td>\n      <td>3</td>\n      <td>2016-02-03</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2476650</th>\n      <td>460565</td>\n      <td>3</td>\n      <td>2016-02-22</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2476651</th>\n      <td>360823</td>\n      <td>2</td>\n      <td>2016-02-25</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2476652</th>\n      <td>443177</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2476653</th>\n      <td>179200</td>\n      <td>3</td>\n      <td>2016-03-12</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2476654</th>\n      <td>68532</td>\n      <td>2</td>\n      <td>2016-01-17</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>2247545 rows Ã— 5 columns</p>\n</div>","text/plain":"         Customer_ID  SubjectLine_ID       Date  wkndhol   resp\n0               1413               2 2016-01-28    False  False\n1              83889               2 2016-03-02    False  False\n2             457832               3 2016-03-09    False  False\n3             127772               1 2016-01-20    False  False\n4             192123               3 2016-02-03    False  False\n...              ...             ...        ...      ...    ...\n2476650       460565               3 2016-02-22    False  False\n2476651       360823               2 2016-02-25    False  False\n2476652       443177               2 2016-03-02    False  False\n2476653       179200               3 2016-03-12     True  False\n2476654        68532               2 2016-01-17     True  False\n\n[2247545 rows x 5 columns]"},"exec_count":610}},"pos":34,"start":1714768364394,"state":"done","type":"cell"}
{"end":1714771784338,"exec_count":978,"id":"5c015c","input":"q_table[1]","kernel":"python3","output":{"0":{"data":{"text/plain":"array([ 3.25348669,  2.64322875, -0.1       , 22.94165313])"},"exec_count":978}},"pos":38,"start":1714771784334,"state":"done","type":"cell"}
{"end":1714777942526,"exec_count":1187,"id":"f97377","input":"dfres.loc[dfres['Customer_ID'].isin(ubseq['0000000000001']) &\\\n         (dfres['wkndhol'] == False) &\\\n         (dfres['SubjectLine_ID'] == 1)].\\\n                    reset_index()","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol</th>\n      <th>resp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>138726</td>\n      <td>78097</td>\n      <td>1</td>\n      <td>2016-01-15</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>182757</td>\n      <td>118975</td>\n      <td>1</td>\n      <td>2016-02-12</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>554426</td>\n      <td>386161</td>\n      <td>1</td>\n      <td>2016-02-12</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>582880</td>\n      <td>473853</td>\n      <td>1</td>\n      <td>2016-01-07</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>598045</td>\n      <td>105830</td>\n      <td>1</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>797174</td>\n      <td>408314</td>\n      <td>1</td>\n      <td>2016-01-12</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1021001</td>\n      <td>118975</td>\n      <td>1</td>\n      <td>2016-03-04</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1248070</td>\n      <td>406364</td>\n      <td>1</td>\n      <td>2016-02-22</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1597960</td>\n      <td>408314</td>\n      <td>1</td>\n      <td>2016-03-08</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1682128</td>\n      <td>455050</td>\n      <td>1</td>\n      <td>2016-01-26</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1742060</td>\n      <td>78097</td>\n      <td>1</td>\n      <td>2016-02-05</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1861375</td>\n      <td>455050</td>\n      <td>1</td>\n      <td>2016-03-17</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2031053</td>\n      <td>78097</td>\n      <td>1</td>\n      <td>2016-01-14</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2199263</td>\n      <td>386161</td>\n      <td>1</td>\n      <td>2016-02-08</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>2466898</td>\n      <td>78097</td>\n      <td>1</td>\n      <td>2016-02-17</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"      index  Customer_ID  SubjectLine_ID       Date  wkndhol   resp\n0    138726        78097               1 2016-01-15    False  False\n1    182757       118975               1 2016-02-12    False  False\n2    554426       386161               1 2016-02-12    False  False\n3    582880       473853               1 2016-01-07    False  False\n4    598045       105830               1 2016-03-02    False  False\n5    797174       408314               1 2016-01-12    False  False\n6   1021001       118975               1 2016-03-04    False  False\n7   1248070       406364               1 2016-02-22    False  False\n8   1597960       408314               1 2016-03-08    False  False\n9   1682128       455050               1 2016-01-26    False  False\n10  1742060        78097               1 2016-02-05    False  False\n11  1861375       455050               1 2016-03-17    False  False\n12  2031053        78097               1 2016-01-14    False  False\n13  2199263       386161               1 2016-02-08    False  False\n14  2466898        78097               1 2016-02-17    False   True"},"exec_count":1187}},"pos":37,"start":1714777942478,"state":"done","type":"cell"}
{"end":1714780439635,"exec_count":1500,"id":"2618db","input":"\n\"\"\"Training the agent\"\"\"\nq_table = np.zeros([2**14, 4])\n\n# Hyperparameters\nalpha = 0.1  # Learning rate\ngamma = 1.0  # Discount rate. All steps matter equally.\nepsilon = 0.5  # Exploration rate\nmaxsteps = 128 # episode length\nepsdecay = epsilon / maxsteps\n\n# Initialize the environment\nenv = emailenv(ubseq, dfres, maxsteps)\n\nconversions = np.zeros([2**14])\ncum_rewards = np.zeros([2**14])\nrespall = 0\nfailsall = 0\nrunningconv = 0\n\nepisode = 0\ntrdone = False\nwhile not trdone:  # full training\n    epdone = False\n\n    epstT = time.time()\n    respbat = 0\n    failsbat = 0\n    steps = 0\n    epsilon = 0.5\n    while not epdone:  # episode training\n        state = env.get_state()\n        if np.random.uniform(0.01, 1.0) < epsilon:\n            action = np.random.randint(0, 4) #Explore\n        else:\n            action = np.argmax(q_table[state, :]) #Exploit\n\n#         new_state, reward, nresp, nfails, epdone = env.step(action)\n        \n        new_state, reward, epdone = env.step(action)\n#         print('{} {} {}'.format(state, action, reward))\n#         respbat += nresp\n#         failsbat += nfails\n        epsilon -= epsdecay\n#         print(epsilon)\n\n        steps += 1\n        new_state_max = np.max(q_table[new_state, :])\n\n        q_table[state, action] =\\\n            (1 - alpha) * q_table[state, action] +\\\n            alpha * (reward + gamma * new_state_max)\n\n        cum_rewards[episode] = reward\n#     conversions[episode] = reward\n\n\n\n#     if episode % 100 == 0:\n#         clear_output(wait=True)\n#     respall += respbat\n#     failsall += failsbat\n#     conversions[episode] = respbat / (respbat + failsbat)\n#     try:\n#         conversions[episode] = respbat / (respbat + failsbat)\n#     except ZeroDivisionError:  #\n#         conversions[episode] = 0\n#     runningconv = respall / (respall + failsall)\n\n    epT = time.time() - epstT\n#     print('Episode: {}, cumreward: {}, runningconv: {:.3f} time: {}'.\\\n#           format(episode, cum_rewards[episode], runningconv, epT))\n    print('Episode: {}, reward: {}, time: {}'.\\\n          format(episode, cum_rewards[episode], epT))\n\n    episode += 1\n\n    #Reset environment\n    state = env.nextep()\n    trdone = env.istrdone()\n#     if episode == 3:\n#         trdone = True\n#     print(trdone)\n\nprint(\"\\n\")\nprint(\"===Training completed.===\\n\")\n\n# # Plot reward convergence\n# plt.title(\"Conversion per Episode\")\n# plt.xlabel(\"Episode\")\n# plt.ylabel(\"Conversion\")\n# plt.plot(conversions)\n# plt.show()\n\nprint(np.argmax(q_table[0]))\nprint(np.argmax(q_table[1]))\nprint(np.argmax(q_table[2]))","kernel":"python3","output":{"0":{"name":"stdout","text":"Episode: 0, reward: 0.06666666666666667, time: 0.11287713050842285\nEpisode: 1, reward: 0.0, time: 0.07994198799133301\n"},"1":{"name":"stdout","text":"Episode: 2, reward: 0.07494145199063232, time: 0.18449068069458008\n"},"10":{"name":"stdout","text":"Episode: 13, reward: 0.058823529411764705, time: 0.1779320240020752\nEpisode: 14, reward: 0.0, time: 0.10091304779052734\n"},"100":{"name":"stdout","text":"Episode: 118, reward: 0.10113546342751518, time: 0.25362730026245117\n"},"101":{"name":"stdout","text":"Episode: 119, reward: 0.13513513513513514, time: 0.20009636878967285\n"},"102":{"name":"stdout","text":"Episode: 120, reward: 0.11392405063291139, time: 0.18231940269470215\nEpisode: 121, reward: 0.0, time: 0.11467552185058594\n"},"103":{"name":"stdout","text":"Episode: 122, reward: 0.08333333333333333, time: 0.17646265029907227\n"},"104":{"name":"stdout","text":"Episode: 123, reward: 0.1111111111111111, time: 0.18661141395568848\n"},"105":{"name":"stdout","text":"Episode: 124, reward: 0.06557377049180328, time: 0.17543840408325195\nEpisode: 125, reward: 1.0, time: 0.1326305866241455\n"},"106":{"name":"stdout","text":"Episode: 126, reward: 0.07407407407407407, time: 0.17558050155639648\n"},"107":{"name":"stdout","text":"Episode: 127, reward: 0.10978043912175649, time: 0.2038881778717041\nEpisode: 128, reward: 0.5, time: 0.10483241081237793\n"},"108":{"name":"stdout","text":"Episode: 129, reward: 0.08383233532934131, time: 0.20110583305358887\n"},"109":{"name":"stdout","text":"Episode: 130, reward: 0.1014294403892944, time: 0.23806381225585938\n"},"11":{"name":"stdout","text":"Episode: 15, reward: 0.25, time: 0.19046330451965332\n"},"110":{"name":"stdout","text":"Episode: 131, reward: 0.12121212121212122, time: 0.17876386642456055\n"},"111":{"name":"stdout","text":"Episode: 132, reward: 0.09586706433745207, time: 0.20969247817993164\n"},"112":{"name":"stdout","text":"Episode: 133, reward: 0.09908870688660745, time: 0.2678353786468506\n"},"113":{"name":"stdout","text":"Episode: 134, reward: 0.1414141414141414, time: 0.18186426162719727\nEpisode: 135, reward: 0.0, time: 0.10249018669128418\n"},"114":{"name":"stdout","text":"Episode: 136, reward: 0.10991957104557641, time: 0.18756914138793945\nEpisode: 137, reward: 0.1111111111111111, time: 0.17304110527038574\n"},"115":{"name":"stdout","text":"Episode: 138, reward: 0.07692307692307693, time: 0.16782069206237793\nEpisode: 139, reward: 0.1566265060240964, time: 0.1757042407989502\n"},"116":{"name":"stdout","text":"Episode: 140, reward: 0.06060606060606061, time: 0.17901229858398438\n"},"117":{"name":"stdout","text":"Episode: 141, reward: 0.10638297872340426, time: 0.1931934356689453\nEpisode: 142, reward: 0.0, time: 0.03853559494018555\n"},"118":{"name":"stdout","text":"Episode: 143, reward: 0.07348242811501597, time: 0.2027435302734375\n"},"119":{"name":"stdout","text":"Episode: 144, reward: 0.0944055944055944, time: 0.19373416900634766\n"},"12":{"name":"stdout","text":"Episode: 16, reward: 0.07430997876857749, time: 0.18772435188293457\n"},"120":{"name":"stdout","text":"Episode: 145, reward: 0.058823529411764705, time: 0.18228960037231445\n"},"121":{"name":"stdout","text":"Episode: 146, reward: 0.09357798165137615, time: 0.19401216506958008\n"},"122":{"name":"stdout","text":"Episode: 147, reward: 0.09430349449497367, time: 0.20562028884887695\n"},"123":{"name":"stdout","text":"Episode: 148, reward: 0.11904761904761904, time: 0.18097233772277832\n"},"124":{"name":"stdout","text":"Episode: 149, reward: 0.14634146341463414, time: 0.21612238883972168\n"},"125":{"name":"stdout","text":"Episode: 150, reward: 0.08417508417508418, time: 0.2111804485321045\n"},"126":{"name":"stdout","text":"Episode: 151, reward: 0.25, time: 0.21169614791870117\nEpisode: 152, reward: 0.0, time: 0.08167147636413574\n"},"127":{"name":"stdout","text":"Episode: 153, reward: 0.3333333333333333, time: 0.18126487731933594\n"},"128":{"name":"stdout","text":"Episode: 154, reward: 0.11428571428571428, time: 0.17511391639709473\n"},"129":{"name":"stdout","text":"Episode: 155, reward: 0.11180124223602485, time: 0.19383692741394043\nEpisode: 156, reward: 0.0, time: 0.037157297134399414\n"},"13":{"name":"stdout","text":"Episode: 17, reward: 0.08746666666666666, time: 0.20108270645141602\n"},"130":{"name":"stdout","text":"Episode: 157, reward: 0.10420841683366733, time: 0.19971466064453125\n"},"131":{"name":"stdout","text":"Episode: 158, reward: 0.08406219630709427, time: 0.2195453643798828\nEpisode: 159, reward: 0.14285714285714285, time: 0.11403656005859375\n"},"132":{"name":"stdout","text":"Episode: 160, reward: 0.08187919463087248, time: 0.23683762550354004\n"},"133":{"name":"stdout","text":"Episode: 161, reward: 0.0906028965981812, time: 0.22635126113891602\n"},"134":{"name":"stdout","text":"Episode: 162, reward: 0.09375, time: 0.2182178497314453\n"},"135":{"name":"stdout","text":"Episode: 163, reward: 0.1326530612244898, time: 0.20421266555786133\n"},"136":{"name":"stdout","text":"Episode: 164, reward: 0.09333333333333334, time: 0.2275533676147461\n"},"137":{"name":"stdout","text":"Episode: 165, reward: 0.1, time: 0.19585108757019043\n"},"138":{"name":"stdout","text":"Episode: 166, reward: 0.2222222222222222, time: 0.17997527122497559\n"},"139":{"name":"stdout","text":"Episode: 167, reward: 0.15789473684210525, time: 0.18496155738830566\n"},"14":{"name":"stdout","text":"Episode: 18, reward: 0.04, time: 0.16448497772216797\n"},"140":{"name":"stdout","text":"Episode: 168, reward: 0.0, time: 0.03779911994934082\nEpisode: 169, reward: 0.0, time: 0.17748618125915527\n"},"141":{"name":"stdout","text":"Episode: 170, reward: 0.08018867924528301, time: 0.16753721237182617\n"},"142":{"name":"stdout","text":"Episode: 171, reward: 0.09709821428571429, time: 0.19610834121704102\nEpisode: 172, reward: 0.16666666666666666, time: 0.15326547622680664\n"},"143":{"name":"stdout","text":"Episode: 173, reward: 0.09508373851971907, time: 0.2079155445098877\n"},"144":{"name":"stdout","text":"Episode: 174, reward: 0.09388075313807531, time: 0.251234769821167\n"},"145":{"name":"stdout","text":"Episode: 175, reward: 0.03409090909090909, time: 0.1796112060546875\n"},"146":{"name":"stdout","text":"Episode: 176, reward: 0.08094186902133922, time: 0.21213698387145996\n"},"147":{"name":"stdout","text":"Episode: 177, reward: 0.09165331909592454, time: 0.24355721473693848\n"},"148":{"name":"stdout","text":"Episode: 178, reward: 0.08333333333333333, time: 0.1856522560119629\n"},"149":{"name":"stdout","text":"Episode: 179, reward: 0.06719367588932806, time: 0.18863320350646973\n"},"15":{"name":"stdout","text":"Episode: 19, reward: 0.07489425230156756, time: 0.21712636947631836\n"},"150":{"name":"stdout","text":"Episode: 180, reward: 0.0933572710951526, time: 0.2032332420349121\n"},"151":{"name":"stdout","text":"Episode: 181, reward: 0.1111111111111111, time: 0.18184256553649902\nEpisode: 182, reward: 0.0, time: 0.03499865531921387\nEpisode: 183, reward: 0.5, time: 0.11229205131530762\n"},"152":{"name":"stdout","text":"Episode: 184, reward: 0.11646586345381527, time: 0.16999006271362305\n"},"153":{"name":"stdout","text":"Episode: 185, reward: 0.09230769230769231, time: 0.19994187355041504\nEpisode: 186, reward: 0.14285714285714285, time: 0.0942380428314209\n"},"154":{"name":"stdout","text":"Episode: 187, reward: 0.10597826086956522, time: 0.20909714698791504\n"},"155":{"name":"stdout","text":"Episode: 188, reward: 0.09140580535002846, time: 0.23289203643798828\n"},"156":{"name":"stdout","text":"Episode: 189, reward: 0.09401709401709402, time: 0.1696481704711914\n"},"157":{"name":"stdout","text":"Episode: 190, reward: 0.10150375939849623, time: 0.19152379035949707\n"},"158":{"name":"stdout","text":"Episode: 191, reward: 0.11101230176374685, time: 0.26499319076538086\n"},"159":{"name":"stdout","text":"Episode: 192, reward: 0.1111111111111111, time: 0.1795034408569336\n"},"16":{"name":"stdout","text":"Episode: 20, reward: 0.09239665354330709, time: 0.30997419357299805\n"},"160":{"name":"stdout","text":"Episode: 193, reward: 0.0851063829787234, time: 0.17505550384521484\n"},"161":{"name":"stdout","text":"Episode: 194, reward: 0.11395101171458999, time: 0.22068214416503906\n"},"162":{"name":"stdout","text":"Episode: 195, reward: 0.1, time: 0.18720746040344238\n"},"163":{"name":"stdout","text":"Episode: 196, reward: 0.25, time: 0.18422913551330566\n"},"164":{"name":"stdout","text":"Episode: 197, reward: 0.07692307692307693, time: 0.18879413604736328\n"},"165":{"name":"stdout","text":"Episode: 198, reward: 0.0787037037037037, time: 0.18203210830688477\n"},"166":{"name":"stdout","text":"Episode: 199, reward: 0.07891770011273957, time: 0.20392560958862305\n"},"167":{"name":"stdout","text":"Episode: 200, reward: 0.043478260869565216, time: 0.19151687622070312\n"},"168":{"name":"stdout","text":"Episode: 201, reward: 0.09078663793103449, time: 0.21458697319030762\n"},"169":{"name":"stdout","text":"Episode: 202, reward: 0.10218247346993259, time: 0.3252730369567871\n"},"17":{"name":"stdout","text":"Episode: 21, reward: 0.1032258064516129, time: 0.1786048412322998\n"},"170":{"name":"stdout","text":"Episode: 203, reward: 0.10227272727272728, time: 0.18135380744934082\n"},"171":{"name":"stdout","text":"Episode: 204, reward: 0.08775811209439528, time: 0.20506572723388672\n"},"172":{"name":"stdout","text":"Episode: 205, reward: 0.09958997722095672, time: 0.28938937187194824\n"},"173":{"name":"stdout","text":"Episode: 206, reward: 0.09009009009009009, time: 0.18071913719177246\n"},"174":{"name":"stdout","text":"Episode: 207, reward: 0.10573248407643313, time: 0.19788169860839844\n"},"175":{"name":"stdout","text":"Episode: 208, reward: 0.11546578233343383, time: 0.2094876766204834\n"},"176":{"name":"stdout","text":"Episode: 209, reward: 0.125, time: 0.1640007495880127\n"},"177":{"name":"stdout","text":"Episode: 210, reward: 0.23076923076923078, time: 0.12616634368896484\n"},"178":{"name":"stdout","text":"Episode: 211, reward: 0.0, time: 0.17399811744689941\n"},"179":{"name":"stdout","text":"Episode: 212, reward: 0.07589285714285714, time: 0.19106197357177734\n"},"18":{"name":"stdout","text":"Episode: 22, reward: 0.09152215799614644, time: 0.23085498809814453\n"},"180":{"name":"stdout","text":"Episode: 213, reward: 0.08497030607583371, time: 0.24561858177185059\n"},"181":{"name":"stdout","text":"Episode: 214, reward: 0.125, time: 0.18339252471923828\n"},"182":{"name":"stdout","text":"Episode: 215, reward: 0.10057061340941512, time: 0.22461295127868652\n"},"183":{"name":"stdout","text":"Episode: 216, reward: 0.10056850483229107, time: 0.29282593727111816\n"},"184":{"name":"stdout","text":"Episode: 217, reward: 0.12, time: 0.17581439018249512\n"},"185":{"name":"stdout","text":"Episode: 218, reward: 0.10392535392535393, time: 0.23013806343078613\n"},"186":{"name":"stdout","text":"Episode: 219, reward: 0.09357121348991268, time: 0.31888365745544434\n"},"187":{"name":"stdout","text":"Episode: 220, reward: 0.12206572769953052, time: 0.17874789237976074\n"},"188":{"name":"stdout","text":"Episode: 221, reward: 0.10264227642276423, time: 0.2136380672454834\n"},"189":{"name":"stdout","text":"Episode: 222, reward: 0.12107510675709621, time: 0.2454390525817871\n"},"19":{"name":"stdout","text":"Episode: 23, reward: 0.09583807510973825, time: 0.2728400230407715\n"},"190":{"name":"stdout","text":"Episode: 223, reward: 0.05405405405405406, time: 0.17627286911010742\n"},"191":{"name":"stdout","text":"Episode: 224, reward: 0.0, time: 0.0437929630279541\nEpisode: 225, reward: 0.2, time: 0.16285324096679688\n"},"192":{"name":"stdout","text":"Episode: 226, reward: 0.12280701754385964, time: 0.20221614837646484\n"},"193":{"name":"stdout","text":"Episode: 227, reward: 0.08979591836734693, time: 0.19080352783203125\nEpisode: 228, reward: 0.25, time: 0.1780550479888916\n"},"194":{"name":"stdout","text":"Episode: 229, reward: 0.08836206896551724, time: 0.21767354011535645\n"},"195":{"name":"stdout","text":"Episode: 230, reward: 0.09428359317000742, time: 0.22250938415527344\n"},"196":{"name":"stdout","text":"Episode: 231, reward: 0.03636363636363636, time: 0.2057185173034668\n"},"197":{"name":"stdout","text":"Episode: 232, reward: 0.10295857988165681, time: 0.2126789093017578\n"},"198":{"name":"stdout","text":"Episode: 233, reward: 0.0908218740006396, time: 0.24474740028381348\n"},"199":{"name":"stdout","text":"Episode: 234, reward: 0.13333333333333333, time: 0.19829845428466797\n"},"2":{"name":"stdout","text":"Episode: 3, reward: 0.07120933087783916, time: 0.20158934593200684\nEpisode: 4, reward: 0.21739130434782608, time: 0.11035966873168945\n"},"20":{"name":"stdout","text":"Episode: 24, reward: 0.1450381679389313, time: 0.1757981777191162\n"},"200":{"name":"stdout","text":"Episode: 235, reward: 0.12, time: 0.19704318046569824\n"},"201":{"name":"stdout","text":"Episode: 236, reward: 0.08854166666666667, time: 0.19779515266418457\n"},"202":{"name":"stdout","text":"Episode: 237, reward: 0.125, time: 0.1956007480621338\n"},"203":{"name":"stdout","text":"Episode: 238, reward: 0.0, time: 0.03631591796875\n"},"204":{"name":"stdout","text":"Episode: 239, reward: 0.13333333333333333, time: 0.18991732597351074\n"},"205":{"name":"stdout","text":"Episode: 240, reward: 0.10582010582010581, time: 0.18656015396118164\n"},"206":{"name":"stdout","text":"Episode: 241, reward: 0.06474820143884892, time: 0.19642090797424316\nEpisode: 242, reward: 0.2857142857142857, time: 0.15588068962097168\n"},"207":{"name":"stdout","text":"Episode: 243, reward: 0.08262108262108261, time: 0.1909773349761963\n"},"208":{"name":"stdout","text":"Episode: 244, reward: 0.08838912133891214, time: 0.22790813446044922\n"},"209":{"name":"stdout","text":"Episode: 245, reward: 0.1308411214953271, time: 0.18051934242248535\n"},"21":{"name":"stdout","text":"Episode: 25, reward: 0.11124546553808948, time: 0.17561888694763184\n"},"210":{"name":"stdout","text":"Episode: 246, reward: 0.08640864086408641, time: 0.18778610229492188\n"},"211":{"name":"stdout","text":"Episode: 247, reward: 0.08404112650871703, time: 0.22794604301452637\n"},"212":{"name":"stdout","text":"Episode: 248, reward: 0.1346153846153846, time: 0.18056344985961914\n"},"213":{"name":"stdout","text":"Episode: 249, reward: 0.1037037037037037, time: 0.18952155113220215\n"},"214":{"name":"stdout","text":"Episode: 250, reward: 0.09929078014184398, time: 0.18956446647644043\nEpisode: 251, reward: 0.07142857142857142, time: 0.16903400421142578\n"},"215":{"name":"stdout","text":"Episode: 252, reward: 0.11538461538461539, time: 0.18099546432495117\n"},"216":{"name":"stdout","text":"Episode: 253, reward: 0.125, time: 0.1771252155303955\nEpisode: 254, reward: 0.3333333333333333, time: 0.17872118949890137\n"},"217":{"name":"stdout","text":"Episode: 255, reward: 0.10817941952506596, time: 0.1920325756072998\n"},"218":{"name":"stdout","text":"Episode: 256, reward: 0.09576547231270359, time: 0.17357897758483887\n"},"219":{"name":"stdout","text":"Episode: 257, reward: 0.17391304347826086, time: 0.2254352569580078\n"},"22":{"name":"stdout","text":"Episode: 26, reward: 0.10225689607132907, time: 0.2173175811767578\n"},"220":{"name":"stdout","text":"Episode: 258, reward: 0.1074561403508772, time: 0.18880128860473633\n"},"221":{"name":"stdout","text":"Episode: 259, reward: 0.11061728395061729, time: 0.24207258224487305\n"},"222":{"name":"stdout","text":"Episode: 260, reward: 0.10714285714285714, time: 0.1739182472229004\n"},"223":{"name":"stdout","text":"Episode: 261, reward: 0.13432835820895522, time: 0.1911773681640625\n"},"224":{"name":"stdout","text":"Episode: 262, reward: 0.11564625850340136, time: 0.17850327491760254\nEpisode: 263, reward: 1.0, time: 0.1578965187072754\n"},"225":{"name":"stdout","text":"Episode: 264, reward: 0.0, time: 0.16713762283325195\n"},"226":{"name":"stdout","text":"Episode: 265, reward: 0.06666666666666667, time: 0.21037769317626953\n"},"227":{"name":"stdout","text":"Episode: 266, reward: 0.045454545454545456, time: 0.18863344192504883\n"},"228":{"name":"stdout","text":"Episode: 267, reward: 0.0821917808219178, time: 0.17760396003723145\nEpisode: 268, reward: 0.0, time: 0.03549766540527344\n"},"229":{"name":"stdout","text":"Episode: 269, reward: 0.09925558312655088, time: 0.1877284049987793\n"},"23":{"name":"stdout","text":"Episode: 27, reward: 0.04081632653061224, time: 0.1831190586090088\nEpisode: 28, reward: 0.5, time: 0.10530281066894531\n"},"230":{"name":"stdout","text":"Episode: 270, reward: 0.10609613130128957, time: 0.18520617485046387\nEpisode: 271, reward: 0.18181818181818182, time: 0.15989351272583008\n"},"231":{"name":"stdout","text":"Episode: 272, reward: 0.12307692307692308, time: 0.18949437141418457\n"},"232":{"name":"stdout","text":"Episode: 273, reward: 0.13310867733782644, time: 0.20406150817871094\n"},"233":{"name":"stdout","text":"Episode: 274, reward: 0.08695652173913043, time: 0.17676234245300293\n"},"234":{"name":"stdout","text":"Episode: 275, reward: 0.07792207792207792, time: 0.1789398193359375\n"},"235":{"name":"stdout","text":"Episode: 276, reward: 0.14207650273224043, time: 0.18845582008361816\nEpisode: 277, reward: 0.0, time: 0.04123187065124512\n"},"236":{"name":"stdout","text":"Episode: 278, reward: 0.2, time: 0.17515778541564941\n"},"237":{"name":"stdout","text":"Episode: 279, reward: 0.11428571428571428, time: 0.19695091247558594\nEpisode: 280, reward: 1.0, time: 0.13300347328186035\n"},"238":{"name":"stdout","text":"Episode: 281, reward: 0.06896551724137931, time: 0.18372440338134766\n"},"239":{"name":"stdout","text":"Episode: 282, reward: 0.1232876712328767, time: 0.17726969718933105\n"},"24":{"name":"stdout","text":"Episode: 29, reward: 0.07894736842105263, time: 0.18852901458740234\n"},"240":{"name":"stdout","text":"Episode: 283, reward: 0.10968660968660969, time: 0.1992168426513672\n"},"241":{"name":"stdout","text":"Episode: 284, reward: 0.0951048951048951, time: 0.22138762474060059\n"},"242":{"name":"stdout","text":"Episode: 285, reward: 0.1724137931034483, time: 0.1764357089996338\n"},"243":{"name":"stdout","text":"Episode: 286, reward: 0.11188811188811189, time: 0.19955801963806152\n"},"244":{"name":"stdout","text":"Episode: 287, reward: 0.10184956843403206, time: 0.24688458442687988\n"},"245":{"name":"stdout","text":"Episode: 288, reward: 0.06451612903225806, time: 0.18720269203186035\n"},"246":{"name":"stdout","text":"Episode: 289, reward: 0.09285714285714286, time: 0.18537449836730957\n"},"247":{"name":"stdout","text":"Episode: 290, reward: 0.1413237924865832, time: 0.193190336227417\nEpisode: 291, reward: 0.25, time: 0.17501449584960938\n"},"248":{"name":"stdout","text":"Episode: 292, reward: 0.2857142857142857, time: 0.17787909507751465\nEpisode: 293, reward: 0.06521739130434782, time: 0.15410971641540527\n"},"249":{"name":"stdout","text":"Episode: 294, reward: 0.10294117647058823, time: 0.1853806972503662\n"},"25":{"name":"stdout","text":"Episode: 30, reward: 0.07934336525307797, time: 0.17693090438842773\n"},"250":{"name":"stdout","text":"Episode: 295, reward: 0.09541984732824428, time: 0.20203852653503418\nEpisode: 296, reward: 0.1111111111111111, time: 0.09572672843933105\n"},"251":{"name":"stdout","text":"Episode: 297, reward: 0.11273209549071618, time: 0.09989428520202637\n"},"252":{"name":"stdout","text":"Episode: 298, reward: 0.10895660203139428, time: 0.20849967002868652\n"},"253":{"name":"stdout","text":"Episode: 299, reward: 0.20689655172413793, time: 0.17435956001281738\n"},"254":{"name":"stdout","text":"Episode: 300, reward: 0.13376309427880742, time: 0.191572904586792\n"},"255":{"name":"stdout","text":"Episode: 301, reward: 0.11938114154296467, time: 0.22754406929016113\nEpisode: 302, reward: 0.04, time: 0.1699047088623047\n"},"256":{"name":"stdout","text":"Episode: 303, reward: 0.13872832369942195, time: 0.18323659896850586\n"},"257":{"name":"stdout","text":"Episode: 304, reward: 0.11809815950920245, time: 0.1869809627532959\n"},"258":{"name":"stdout","text":"Episode: 305, reward: 0.25, time: 0.1960461139678955\n"},"259":{"name":"stdout","text":"Episode: 306, reward: 0.125, time: 0.17110610008239746\n"},"26":{"name":"stdout","text":"Episode: 31, reward: 0.07257546563904946, time: 0.21106672286987305\n"},"260":{"name":"stdout","text":"Episode: 307, reward: 0.10344827586206896, time: 0.18961071968078613\n"},"261":{"name":"stdout","text":"Episode: 308, reward: 0.25, time: 0.16375112533569336\n"},"262":{"name":"stdout","text":"Episode: 309, reward: 0.16417910447761194, time: 0.17224788665771484\n"},"263":{"name":"stdout","text":"Episode: 310, reward: 0.08878504672897196, time: 0.15544462203979492\nEpisode: 311, reward: 0.08643457382953182, time: 0.1171729564666748\n"},"264":{"name":"stdout","text":"Episode: 312, reward: 0.3333333333333333, time: 0.17357420921325684\n"},"265":{"name":"stdout","text":"Episode: 313, reward: 0.11290322580645161, time: 0.19170188903808594\n"},"266":{"name":"stdout","text":"Episode: 314, reward: 0.10871440897325281, time: 0.19403958320617676\nEpisode: 315, reward: 0.18181818181818182, time: 0.10665035247802734\n"},"267":{"name":"stdout","text":"Episode: 316, reward: 0.18421052631578946, time: 0.1645047664642334\n"},"268":{"name":"stdout","text":"Episode: 317, reward: 0.15151515151515152, time: 0.17663931846618652\nEpisode: 318, reward: 0.0, time: 0.10571813583374023\n"},"269":{"name":"stdout","text":"Episode: 319, reward: 0.25, time: 0.17592954635620117\nEpisode: 320, reward: 1.0, time: 0.15108394622802734\n"},"27":{"name":"stdout","text":"Episode: 32, reward: 0.075, time: 0.1918032169342041\n"},"270":{"name":"stdout","text":"Episode: 321, reward: 0.125, time: 0.189009428024292\n"},"271":{"name":"stdout","text":"Episode: 322, reward: 0.07766990291262135, time: 0.20029234886169434\nEpisode: 323, reward: 0.0, time: 0.03560280799865723\n"},"272":{"name":"stdout","text":"Episode: 324, reward: 0.10344827586206896, time: 0.1878960132598877\n"},"273":{"name":"stdout","text":"Episode: 325, reward: 0.09480401093892434, time: 0.19055414199829102\n"},"274":{"name":"stdout","text":"Episode: 326, reward: 0.3, time: 0.1842048168182373\n"},"275":{"name":"stdout","text":"Episode: 327, reward: 0.12021857923497267, time: 0.18328404426574707\n"},"276":{"name":"stdout","text":"Episode: 328, reward: 0.0989010989010989, time: 0.20546269416809082\n"},"277":{"name":"stdout","text":"Episode: 329, reward: 0.13636363636363635, time: 0.1954498291015625\n"},"278":{"name":"stdout","text":"Episode: 330, reward: 0.21212121212121213, time: 0.17576193809509277\n"},"279":{"name":"stdout","text":"Episode: 331, reward: 0.09405940594059406, time: 0.19161462783813477\nEpisode: 332, reward: 0.4, time: 0.18416166305541992\n"},"28":{"name":"stdout","text":"Episode: 33, reward: 0.06938047838359827, time: 0.24129295349121094\n"},"280":{"name":"stdout","text":"Episode: 333, reward: 1.0, time: 0.0916910171508789\nEpisode: 334, reward: 0.14285714285714285, time: 0.16641736030578613\n"},"281":{"name":"stdout","text":"\n\n===Training completed.===\n\n0\n2\n0\n"},"29":{"name":"stdout","text":"Episode: 34, reward: 0.09172675239723482, time: 0.4048585891723633\n"},"3":{"name":"stdout","text":"Episode: 5, reward: 0.06792873051224944, time: 0.2210233211517334\n"},"30":{"name":"stdout","text":"Episode: 35, reward: 0.09567901234567901, time: 0.20737338066101074\n"},"31":{"name":"stdout","text":"Episode: 36, reward: 0.09576202118989405, time: 0.263012170791626\n"},"32":{"name":"stdout","text":"Episode: 37, reward: 0.09607306828172316, time: 0.34592223167419434\n"},"33":{"name":"stdout","text":"Episode: 38, reward: 0.08144796380090498, time: 0.18816161155700684\n"},"34":{"name":"stdout","text":"Episode: 39, reward: 0.09504685408299866, time: 0.20101642608642578\n"},"35":{"name":"stdout","text":"Episode: 40, reward: 0.1090311986863711, time: 0.24251532554626465\n"},"36":{"name":"stdout","text":"Episode: 41, reward: 0.078125, time: 0.17126798629760742\n"},"37":{"name":"stdout","text":"Episode: 42, reward: 0.0, time: 0.12849211692810059\n"},"38":{"name":"stdout","text":"Episode: 43, reward: 0.06382978723404255, time: 0.17662334442138672\n"},"39":{"name":"stdout","text":"Episode: 44, reward: 0.08893280632411067, time: 0.18300962448120117\n"},"4":{"name":"stdout","text":"Episode: 6, reward: 0.0, time: 0.15876340866088867\n"},"40":{"name":"stdout","text":"Episode: 45, reward: 0.07028165306659648, time: 0.22114968299865723\n"},"41":{"name":"stdout","text":"Episode: 46, reward: 0.10909090909090909, time: 0.1704099178314209\n"},"42":{"name":"stdout","text":"Episode: 47, reward: 0.08224686243450713, time: 0.263857364654541\n"},"43":{"name":"stdout","text":"Episode: 48, reward: 0.09175179143162067, time: 0.4240696430206299\n"},"44":{"name":"stdout","text":"Episode: 49, reward: 0.09382716049382717, time: 0.18315434455871582\n"},"45":{"name":"stdout","text":"Episode: 50, reward: 0.07786483839373164, time: 0.2404019832611084\n"},"46":{"name":"stdout","text":"Episode: 51, reward: 0.09959390454746492, time: 0.3806624412536621\n"},"47":{"name":"stdout","text":"Episode: 52, reward: 0.06963788300835655, time: 0.18851065635681152\n"},"48":{"name":"stdout","text":"Episode: 53, reward: 0.0963718820861678, time: 0.19956111907958984\n"},"49":{"name":"stdout","text":"Episode: 54, reward: 0.08873102103357014, time: 0.26421284675598145\nEpisode: 55, reward: 0.12790697674418605, time: 0.16857099533081055\n"},"5":{"name":"stdout","text":"Episode: 7, reward: 0.08045977011494253, time: 0.18602848052978516\n"},"50":{"name":"stdout","text":"Episode: 56, reward: 0.0, time: 0.04480576515197754\nEpisode: 57, reward: 0.14285714285714285, time: 0.1578841209411621\n"},"51":{"name":"stdout","text":"Episode: 58, reward: 0.09183673469387756, time: 0.18999600410461426\n"},"52":{"name":"stdout","text":"Episode: 59, reward: 0.08401400233372229, time: 0.19176030158996582\nEpisode: 60, reward: 0.2857142857142857, time: 0.1750335693359375\n"},"53":{"name":"stdout","text":"Episode: 61, reward: 0.0783289817232376, time: 0.23510003089904785\n"},"54":{"name":"stdout","text":"Episode: 62, reward: 0.07034426673895365, time: 0.24286198616027832\n"},"55":{"name":"stdout","text":"Episode: 63, reward: 0.10619469026548672, time: 0.17229151725769043\n"},"56":{"name":"stdout","text":"Episode: 64, reward: 0.07849829351535836, time: 0.20681381225585938\n"},"57":{"name":"stdout","text":"Episode: 65, reward: 0.09287818402356611, time: 0.2198317050933838\n"},"58":{"name":"stdout","text":"Episode: 66, reward: 0.04477611940298507, time: 0.1923835277557373\n"},"59":{"name":"stdout","text":"Episode: 67, reward: 0.08683473389355742, time: 0.17930936813354492\n"},"6":{"name":"stdout","text":"Episode: 8, reward: 0.08606395578365575, time: 0.21452808380126953\n"},"60":{"name":"stdout","text":"Episode: 68, reward: 0.08025078369905957, time: 0.2033376693725586\nEpisode: 69, reward: 0.18181818181818182, time: 0.161299467086792\n"},"61":{"name":"stdout","text":"Episode: 70, reward: 0.0, time: 0.03628420829772949\nEpisode: 71, reward: 0.1111111111111111, time: 0.1753370761871338\n"},"62":{"name":"stdout","text":"Episode: 72, reward: 0.0, time: 0.10319209098815918\n"},"63":{"name":"stdout","text":"Episode: 73, reward: 0.08029197080291971, time: 0.18250346183776855\n"},"64":{"name":"stdout","text":"Episode: 74, reward: 0.0625, time: 0.19378447532653809\n"},"65":{"name":"stdout","text":"Episode: 75, reward: 0.07345702385460053, time: 0.21964192390441895\n"},"66":{"name":"stdout","text":"Episode: 76, reward: 0.07812784556547077, time: 0.30355405807495117\n"},"67":{"name":"stdout","text":"Episode: 77, reward: 0.08333333333333333, time: 0.1805591583251953\n"},"68":{"name":"stdout","text":"Episode: 78, reward: 0.08735968765251342, time: 0.19713711738586426\n"},"69":{"name":"stdout","text":"Episode: 79, reward: 0.08610056925996205, time: 0.25810980796813965\n"},"7":{"name":"stdout","text":"Episode: 9, reward: 0.08776695391532409, time: 0.27255892753601074\nEpisode: 10, reward: 0.0782608695652174, time: 0.16190624237060547\n"},"70":{"name":"stdout","text":"Episode: 80, reward: 0.11904761904761904, time: 0.18015789985656738\n"},"71":{"name":"stdout","text":"Episode: 81, reward: 0.077834179357022, time: 0.18935298919677734\n"},"72":{"name":"stdout","text":"Episode: 82, reward: 0.07100357001190004, time: 0.1905679702758789\n"},"73":{"name":"stdout","text":"Episode: 83, reward: 0.03225806451612903, time: 0.1645193099975586\n"},"74":{"name":"stdout","text":"Episode: 84, reward: 0.08571428571428572, time: 0.10924839973449707\n"},"75":{"name":"stdout","text":"Episode: 85, reward: 0.055, time: 0.18769049644470215\n"},"76":{"name":"stdout","text":"Episode: 86, reward: 0.09090909090909091, time: 0.18915629386901855\n"},"77":{"name":"stdout","text":"Episode: 87, reward: 0.09707298999629492, time: 0.19052386283874512\nEpisode: 88, reward: 0.05555555555555555, time: 0.15788674354553223\n"},"78":{"name":"stdout","text":"Episode: 89, reward: 0.0772626931567329, time: 0.18227171897888184\n"},"79":{"name":"stdout","text":"Episode: 90, reward: 0.09848679148499616, time: 0.20832467079162598\n"},"8":{"name":"stdout","text":"Episode: 11, reward: 0.08492822966507177, time: 0.18338584899902344\n"},"80":{"name":"stdout","text":"Episode: 91, reward: 0.15714285714285714, time: 0.19163966178894043\n"},"81":{"name":"stdout","text":"Episode: 92, reward: 0.175, time: 0.16765570640563965\n"},"82":{"name":"stdout","text":"Episode: 93, reward: 0.07720588235294118, time: 0.17842674255371094\nEpisode: 94, reward: 0.3333333333333333, time: 0.15523266792297363\n"},"83":{"name":"stdout","text":"Episode: 95, reward: 0.0, time: 0.11316704750061035\n"},"84":{"name":"stdout","text":"Episode: 96, reward: 0.15789473684210525, time: 0.19070172309875488\nEpisode: 97, reward: 0.0, time: 0.04669189453125\n"},"85":{"name":"stdout","text":"Episode: 98, reward: 0.11428571428571428, time: 0.17102622985839844\n"},"86":{"name":"stdout","text":"Episode: 99, reward: 0.08256880733944955, time: 0.17609500885009766\n"},"87":{"name":"stdout","text":"Episode: 100, reward: 0.09391534391534391, time: 0.18165111541748047\n"},"88":{"name":"stdout","text":"Episode: 101, reward: 0.08085808580858085, time: 0.20511627197265625\nEpisode: 102, reward: 0.09523809523809523, time: 0.16000151634216309\n"},"89":{"name":"stdout","text":"Episode: 103, reward: 0.10964083175803403, time: 0.18344831466674805\n"},"9":{"name":"stdout","text":"Episode: 12, reward: 0.08679125752296483, time: 0.20809292793273926\n"},"90":{"name":"stdout","text":"Episode: 104, reward: 0.0877112836911832, time: 0.2184467315673828\nEpisode: 105, reward: 0.08571428571428572, time: 0.1638355255126953\n"},"91":{"name":"stdout","text":"Episode: 106, reward: 0.1390728476821192, time: 0.17518854141235352\n"},"92":{"name":"stdout","text":"Episode: 107, reward: 0.10869565217391304, time: 0.19846487045288086\nEpisode: 108, reward: 0.25, time: 0.17415761947631836\n"},"93":{"name":"stdout","text":"Episode: 109, reward: 0.0, time: 0.11211276054382324\n"},"94":{"name":"stdout","text":"Episode: 110, reward: 0.17647058823529413, time: 0.18518447875976562\n"},"95":{"name":"stdout","text":"Episode: 111, reward: 0.03669724770642202, time: 0.17775726318359375\n"},"96":{"name":"stdout","text":"Episode: 112, reward: 0.10539845758354756, time: 0.20803308486938477\nEpisode: 113, reward: 0.5, time: 0.1542353630065918\n"},"97":{"name":"stdout","text":"Episode: 114, reward: 0.09602194787379972, time: 0.20381879806518555\n"},"98":{"name":"stdout","text":"Episode: 115, reward: 0.09295179565968888, time: 0.24672532081604004\nEpisode: 116, reward: 0.0, time: 0.09529447555541992\n"},"99":{"name":"stdout","text":"Episode: 117, reward: 0.09648662821185107, time: 0.20522737503051758\n"}},"pos":42,"scrolled":true,"start":1714780356490,"state":"done","type":"cell"}
{"end":1714780758504,"exec_count":1502,"id":"cf7e4a","input":"q_table[1]","kernel":"python3","output":{"0":{"data":{"text/plain":"array([0.04344894, 0.00131903, 0.56532414, 0.00814814])"},"exec_count":1502}},"pos":45,"start":1714780758500,"state":"done","type":"cell"}
{"exec_count":1134,"id":"5698bb","input":"def rl_soln(q_table):\n\n    \"\"\"Training the agent\"\"\"\n    q_table = np.zeros([2**14, 4])\n\n    # Hyperparameters\n    alpha = 0.1  # Learning rate\n    gamma = 1.0  # Discount rate. All steps matter equally.\n    epsilon = 0.5  # Exploration rate\n    maxsteps = 128 # episode length\n    epsdecay = epsilon / maxsteps\n\n    # Initialize the environment\n    env = emailenv(ubseq, dfres, maxsteps)\n\n    conversions = np.zeros([2**14])\n    cum_rewards = np.zeros([2**14])\n    respall = 0\n    failsall = 0\n    runningconv = 0\n\n    episode = 0\n    trdone = False\n    while not trdone:  # full training\n        epdone = False\n\n        epstT = time.time()\n        respbat = 0\n        failsbat = 0\n        steps = 0\n\n        while not epdone:  # episode training\n            state = env.get_state()\n\n            action = np.argmax(q_table[state, :]) #Exploit\n\n    #         new_state, reward, nresp, nfails, epdone = env.step(action)\n\n            new_state, reward, epdone = env.step(action)\n    #         print('{} {} {}'.format(state, action, reward))\n    #         respbat += nresp\n    #         failsbat += nfails\n            epsilon -= epsdecay\n    #         print(epsilon)\n\n            steps += 1\n            new_state_max = np.max(q_table[new_state, :])\n\n            q_table[state, action] =\\\n                (1 - alpha) * q_table[state, action] +\\\n                alpha * (reward + gamma * new_state_max)\n\n            cum_rewards[episode] = reward\n    #     conversions[episode] = reward\n\n\n\n    #     if episode % 100 == 0:\n    #         clear_output(wait=True)\n    #     respall += respbat\n    #     failsall += failsbat\n    #     conversions[episode] = respbat / (respbat + failsbat)\n    #     try:\n    #         conversions[episode] = respbat / (respbat + failsbat)\n    #     except ZeroDivisionError:  #\n    #         conversions[episode] = 0\n    #     runningconv = respall / (respall + failsall)\n\n        epT = time.time() - epstT\n    #     print('Episode: {}, cumreward: {}, runningconv: {:.3f} time: {}'.\\\n    #           format(episode, cum_rewards[episode], runningconv, epT))\n        print('Episode: {}, reward: {}, time: {}'.\\\n              format(episode, cum_rewards[episode], epT))\n\n        episode += 1\n\n        #Reset environment\n        state = env.nextep()\n        trdone = env.istrdone()\n    #     if episode == 3:\n    #         trdone = True\n    #     print(trdone)\n\n    print(\"\\n\")\n    print(\"===Training completed.===\\n\")\n\n    # # Plot reward convergence\n    # plt.title(\"Conversion per Episode\")\n    # plt.xlabel(\"Episode\")\n    # plt.ylabel(\"Conversion\")\n    # plt.plot(conversions)\n    # plt.show()\n\n    print(np.argmax(q_table[0]))\n    print(np.argmax(q_table[1]))\n    print(np.argmax(q_table[2]))\n    \nrl_soln(q_table)","kernel":"python3","output":{"0":{"name":"stdout","text":"8192 0\n0 0\n8192 0\n8192 0\n0 0\n0 0\n0 0\n0 0\n8192 0\n0 0\n8192 0\n0 0\n0 0\n8192 0\n0 0\n0 0\n8192 0\n8192 0\n0 0\n0 0\n8192 0\n0 0\n8192 0\n8192 0\n0 0\n8192 0\n0 0\n0 0\n0 0\n8192 0\n0 0\n8192 0\n8192 0\n8192 0\n0 0\n0 0\n8192 0\n0 0\n0 0\n0 0\nEpisode: 0, cumreward: 0.0, runningconv: 0.000 time: 0.001813650131225586\n\n0 0\n1 1\n8193 0\n1 1\n8193 0\n8193 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n8193 0\n1 1\n1 1\n1 1\n8193 0\n8193 0\n1 1\n1 1\n1 1\n8193 0\n8193 0\n8193 0\n1 1\n8193 0\n8193 0\n1 1\n8193 0\n8193 0\n1 1\n1 1\nEpisode: 1, cumreward: 56.0, runningconv: 0.100 time: 0.04257488250732422\n\n1 1\n4 2\n8196 0\n4 2\n4 2\n8196 0\n8196 0\n4 2\n4 2\n8196 0\n8196 0\n4 2\n4 2\n8196 0\n8196 0\n4 2\n4 2\n4 2\n4 2\n8196 0\n4 2\n4 2\n4 2\n4 2\n4 2\n4 2\n8196 0\n8196 0\n4 2\n4 2\n8196 0\n4 2\n4 2\n8196 0\n4 2\n4 2\n4 2\n8196 0\n8196 0\n4 2\nEpisode: 2, cumreward: 56.0, runningconv: 0.111 time: 0.04158449172973633\n\n"},"1":{"name":"stdout","text":"\n\n===Training completed.===\n\n[ 0.        -0.5217031 -0.40951   -0.271    ]\n"}},"pos":46,"scrolled":false,"state":"done","type":"cell"}
{"exec_count":1203,"id":"330ce6","input":"","kernel":"python3","output":{"0":{"data":{"text/plain":"range(0, 4)"},"exec_count":1203}},"pos":0,"state":"done","type":"cell"}
{"exec_count":596,"id":"9f00df","input":"\n# dfrsp = dfse.merge(dfrp, left_on=['Customer_ID', 'Date', 'SubjectLine_ID'],\\\n#                    right_on=['Customer_ID', 'Date', 'SubjectLine_ID'])\n\n# with open ('./data/dfrsp.bin', 'wb') as f:\n#     pickle.dump(dfrsp, f)\n\nwith open ('./data/dfrsp.bin', 'rb') as f:\n    dfrsp = pickle.load(f)\n\ndfrsp","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol_x</th>\n      <th>wkndhol_y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>288759</td>\n      <td>3</td>\n      <td>2016-02-18</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>73067</td>\n      <td>2</td>\n      <td>2016-03-22</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>453316</td>\n      <td>2</td>\n      <td>2016-01-21</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>460528</td>\n      <td>1</td>\n      <td>2016-01-27</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>201612</td>\n      <td>2</td>\n      <td>2016-01-29</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>229105</th>\n      <td>46081</td>\n      <td>1</td>\n      <td>2016-02-22</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>229106</th>\n      <td>34101</td>\n      <td>2</td>\n      <td>2016-03-17</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>229107</th>\n      <td>337686</td>\n      <td>2</td>\n      <td>2016-01-06</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>229108</th>\n      <td>78807</td>\n      <td>2</td>\n      <td>2016-01-21</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>229109</th>\n      <td>317419</td>\n      <td>3</td>\n      <td>2016-01-30</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>229110 rows Ã— 5 columns</p>\n</div>","text/plain":"        Customer_ID  SubjectLine_ID       Date  wkndhol_x  wkndhol_y\n0            288759               3 2016-02-18      False      False\n1             73067               2 2016-03-22      False      False\n2            453316               2 2016-01-21      False      False\n3            460528               1 2016-01-27      False      False\n4            201612               2 2016-01-29      False      False\n...             ...             ...        ...        ...        ...\n229105        46081               1 2016-02-22      False      False\n229106        34101               2 2016-03-17      False      False\n229107       337686               2 2016-01-06      False      False\n229108        78807               2 2016-01-21      False      False\n229109       317419               3 2016-01-30       True       True\n\n[229110 rows x 5 columns]"},"exec_count":596}},"pos":31,"state":"done","type":"cell"}
{"exec_count":611,"id":"610064","input":"# dfres = pd.concat([dffl, dfrsp]).reset_index()\n# dfres = dfres.drop(columns = ['index'])\n# with open ('./data/dfres.bin', 'wb') as f:\n#     pickle.dump(dfres, f)\n\nwith open ('./data/dfres.bin', 'rb') as f:\n    dfres = pickle.load(f)\n\ndfres","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Customer_ID</th>\n      <th>SubjectLine_ID</th>\n      <th>Date</th>\n      <th>wkndhol</th>\n      <th>resp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1413</td>\n      <td>2</td>\n      <td>2016-01-28</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>83889</td>\n      <td>2</td>\n      <td>2016-03-02</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>457832</td>\n      <td>3</td>\n      <td>2016-03-09</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>127772</td>\n      <td>1</td>\n      <td>2016-01-20</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>192123</td>\n      <td>3</td>\n      <td>2016-02-03</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2476650</th>\n      <td>46081</td>\n      <td>1</td>\n      <td>2016-02-22</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2476651</th>\n      <td>34101</td>\n      <td>2</td>\n      <td>2016-03-17</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2476652</th>\n      <td>337686</td>\n      <td>2</td>\n      <td>2016-01-06</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2476653</th>\n      <td>78807</td>\n      <td>2</td>\n      <td>2016-01-21</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2476654</th>\n      <td>317419</td>\n      <td>3</td>\n      <td>2016-01-30</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>2476655 rows Ã— 5 columns</p>\n</div>","text/plain":"         Customer_ID  SubjectLine_ID       Date  wkndhol   resp\n0               1413               2 2016-01-28    False  False\n1              83889               2 2016-03-02    False  False\n2             457832               3 2016-03-09    False  False\n3             127772               1 2016-01-20    False  False\n4             192123               3 2016-02-03    False  False\n...              ...             ...        ...      ...    ...\n2476650        46081               1 2016-02-22    False   True\n2476651        34101               2 2016-03-17    False   True\n2476652       337686               2 2016-01-06    False   True\n2476653        78807               2 2016-01-21    False   True\n2476654       317419               3 2016-01-30     True   True\n\n[2476655 rows x 5 columns]"},"exec_count":611}},"pos":35,"state":"done","type":"cell"}
{"id":"b9e5a9","input":"","pos":48,"type":"cell"}
{"id":0,"time":1714820773304,"type":"user"}
{"last_load":1714662452961,"type":"file"}